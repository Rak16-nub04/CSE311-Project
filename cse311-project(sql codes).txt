For privilages:

GRANT ALL PRIVILEGES ON project.* TO 'rakib'@'localhost' IDENTIFIED BY 'password';
FLUSH PRIVILEGES;


for admins table:

CREATE TABLE admins (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    Full_Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL
);


for signup table:

CREATE TABLE signup (
 
    username VARCHAR(50) NOT NULL,
    Full_Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL UNIQUE,
    Phone VARCHAR(20),
    DoB DATE,
    Password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


for wedding_details table:

CREATE TABLE wedding_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    num_guests INT NOT NULL,
    wedding_date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)


for wedding_guest table:

CREATE TABLE wedding_guests (
    id INT AUTO_INCREMENT PRIMARY KEY,
    wedding_id INT NOT NULL,
    guest_name VARCHAR(100) NOT NULL,
    num_member INT NOT NULL,
    gift VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_wedding_details
        FOREIGN KEY (wedding_id) 
        REFERENCES wedding_details(id)
        ON DELETE CASCADE
);


for birthday_event_details table:

CREATE TABLE birthday_event_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    location VARCHAR(255) NOT NULL,
    num_guests INT NOT NULL,
    birthday_event_date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

for birthday_guests table:

CREATE TABLE birthday_guests (
    id INT AUTO_INCREMENT PRIMARY KEY,
    birthday_event_id INT NOT NULL,
    guest_name VARCHAR(100) NOT NULL,
    num_member INT NOT NULL,
    gift VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_birthday_event
        FOREIGN KEY (birthday_event_id)
        REFERENCES birthday_event_details(id)
        ON DELETE CASCADE
);


for musical_event_details table:

CREATE TABLE musical_event_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    event_name VARCHAR(100) NOT NULL,
    venue VARCHAR(255) NOT NULL,
    num_audience INT NOT NULL,
    event_date DATE NOT NULL,
    performer VARCHAR(100) NOT NULL,
    ticket_price DECIMAL(10, 2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


for musical_ticket table:

CREATE TABLE musical_ticket (
    id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
    nid VARCHAR(20) NOT NULL,
    num_tickets INT NOT NULL,
    amount_paid DECIMAL(10, 2) NOT NULL,
    payment_method VARCHAR(50) NOT NULL,
    booking_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_musical_event
        FOREIGN KEY (event_id)
        REFERENCES musical_event_details(id)
        ON DELETE CASCADE
);


for others_events table:

CREATE TABLE others_events (
    id INT AUTO_INCREMENT PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_location VARCHAR(255) NOT NULL,
    event_details TEXT NOT NULL,
    comments TEXT,
    phone_number VARCHAR(20) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


